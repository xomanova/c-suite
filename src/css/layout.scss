@import 'animations';
@import 'glyphicons';
@import 'mixins';
@import 'vars';

body {
  text-align: center;
  max-width: $phone-width;
  padding: $body-padding;
  padding-bottom: ($base-button-height + $base-button-margin) * 3 + $base-button-margin + $base-border-blur +
    $base-border-spread;
  margin: 0 auto;
  font-size: 2em;
  overflow-x: hidden;
}

ol,
ul {
  text-align: left;
}

li.highlight {
  color: #337ab7;
}

a.list-group-item {
  color: inherit;

  &:hover,
  &:active,
  &:focus {
    color: inherit;
  }
}

$button-min-size: 0.8;

a.btn {
  display: block;
  flex-grow: 1;
  flex-basis: $body-inner-width * $button-min-size;
  width: $body-inner-width;
  max-width: $body-inner-width;
  min-width: $body-inner-width * $button-min-size;
  padding: 0.35em;
  margin: 0 $body-padding $body-padding 0;

  font-size: 1.8em;
  text-overflow: ellipsis;
  overflow: hidden;

  &.small {
    font-size: 1em;
  }
}

.base {
  @extend %btn-container;

  z-index: 10;
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  box-shadow: 0 0 $base-border-blur $base-border-spread rgba(0, 0, 0, 0.75);
  transition: box-shadow 0.2s;
  background: $bg-color;
  padding: $body-padding 0 0 $body-padding;

  p {
    margin: 0 $body-padding $body-padding 0;
    width: 100%;
  }
}

.utility-menu-button" type="hidden {
  display: none;
}

.horizontal-buttons {
  display: flex;
  justify-content: center;
  width: 100%;

  a.btn {
    min-width: initial;
  }

  &.half-width a.btn {
    width: ($phone-width - 3 * $body-padding)/2;
    flex-basis: initial;
    flex-grow: 0;
  }

  &.stretch-width {
    @extend %nice-scrollbar;

    justify-content: left;
    overflow-x: auto;

    a.btn {
      width: initial;
      flex-basis: initial;
      flex-shrink: 0;
    }
  }

  &.flow {
    width: $phone-width - $body-padding;
  }
}

input {
  display: block;
  width: 100%;
  font-size: 2em;
  text-align: center;
  color: black;
}

[contenteditable] {
  -webkit-user-select: text;
  user-select: text;
}

.list-group {
  a {
    cursor: pointer;
  }

  &.disabled {
    pointer-events: none;
  }

  .list-group-item {
    position: relative;

    .label {
      vertical-align: middle;
      position: absolute;
      line-height: 1.5em;
      right: 10px;
      top: 10px;
      bottom: 10px;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    p {
      margin: 5px 0;
    }

    &.disabled,
    &.disabled:hover,
    &.disabled:focus {
      background-color: #555;
      pointer-events: none;
    }
  }
}

.tiled {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;

  &.vertically-centred {
    align-items: center;
  }

  .tile {
    flex-shrink: 0;
    max-width: 100%;
    min-width: $phone-width - 2 * $body-padding;

    &.scale-100 {
      flex-basis: 100%;
    }
    &.scale-50 {
      flex-basis: 50%;
    }
    &.scale-33 {
      flex-basis: 33%;
    }
    &.scale-0 {
      flex-basis: 0;
    }

    &.phone-50 {
      min-width: ($phone-width/2) - 2 * $body-padding;
    }
    &.phone-33 {
      min-width: ($phone-width/3) - 2 * $body-padding;
    }
    &.phone-0 {
      min-width: unset;
    }
  }

  @mixin gap($size) {
    margin-right: -$size;
    .tile {
      padding-right: $size;
    }
  }

  &.gap-10 {
    @include gap(10px);
  }
  &.gap-20 {
    @include gap(20px);
  }
  &.gap-40 {
    @include gap(40px);
  }
  &.gap-80 {
    @include gap(80px);
  }
}

section {
  max-width: $phone-width - 2 * $body-padding;
  margin: 0 auto;

  &.wide {
    max-width: unset;
  }
}

.button-list {
  &.disabled {
    pointer-events: none;
  }

  .btn {
    display: inline-block;
    width: 45%;
    font-size: 1em;
    margin: 2.5px;
    padding: 0.25em 1em;
  }
}

.slide-reveal {
  .slider {
    position: relative;
    width: 100%;
    height: $slider-height;
    padding-top: 200px;
    margin-top: -10px;

    // Ensure that all secret contents is covered, but the slider doesn't appear under the button base.
    max-height: calc(100vh - #{$base-button-height + $base-button-margin * 2});

    background: #333;
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.25);

    border: 230px solid transparent;
    border-bottom: 50px solid #444;
    border-top: 0;
    border-bottom-right-radius: 10px;
    border-bottom-left-radius: 10px;

    div {
      position: absolute;
      width: 460px;
      left: -230px;
      bottom: 50px;
    }
  }

  &:after {
    content: '';
    display: block;
    height: 100%;
  }

  .sensitive {
    position: fixed;
    z-index: -10;
    top: 75px;
    left: 0;
    right: 0;
    padding: 0 10px;
    max-width: 480px;
    margin: 0px auto;
  }
}

.overlay {
  position: fixed;
  z-index: 100000;
  padding: 200px 10px;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.75);

  &.error {
    background: rgba(#e74c3c, 0.5);
  }
}

ul.game-labels {
  display: flex;
  flex-wrap: wrap;
  margin: 5px 0 0 0;
  padding: 0;

  &.centred {
    justify-content: center;
  }

  .label {
    margin: 3px;
  }

  .players {
    display: inline-flex;
    > *:not(:last-child) {
      margin-right: 5px;
    }
  }

  .glyphicon {
    width: 15.3438px;
  }
}

#mc_embed_signup {
  margin: 40px 10px;

  label {
    font-weight: normal;
  }

  .horizontal {
    display: flex;
    flex-direction: row;

    > * {
      margin: 5px;
    }

    input {
      flex-grow: 1;
      font-size: 1em;
    }
    button {
      font-size: 1em;
    }
  }
}

// Helper classes that show or hide functions based on touch/mouse support
.only-touch-enabled {
  // by default touch is assumed to be true
  @media (pointer: fine), (hover: hover) {
    display: none;
  }
}
.not-touch-enabled {
  // by default touch is assumed to be true
  @media (pointer: coarse) and (hover: none) {
    // if we are touch
    display: none;
  }
}

.language {
  $size: 36px;

  width: $size;
  height: $size;
  border-radius: $size;
  border: 2px solid #222;

  transition: border-color 300ms;

  a:hover & {
    border-color: #888;
  }

  a:active & {
    border-color: #222;
  }

  @each $language in $languages {
    &.#{$language} {
      background-image: url('../../../static/languages/#{$language}.svg');
    }
  }
}
